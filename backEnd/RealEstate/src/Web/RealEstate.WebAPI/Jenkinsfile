pipeline {
    agent any

    environment {
        ASPNETCORE_ENVIRONMENT = 'Production'
        DOCKER_IMAGE_NAME = 'backend-serkan'
        DOCKER_REGISTRY_CREDENTIALS = 'dockerhub-credentials' // Jenkins Credential ID for Docker Hub
        DOTNET_SDK_VERSION = '3.1' // .NET SDK version to install
    }

    stages {
        stage('Checkout') {
            steps {
                // Check out the source code from the Git repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    // Install .NET SDK
                    sh "wget https://dot.net/v1/dotnet-install.sh -O /tmp/dotnet-install.sh"
                    sh "chmod +x /tmp/dotnet-install.sh"
                    sh "/tmp/dotnet-install.sh --version ${DOTNET_SDK_VERSION} --install-dir /usr/share/dotnet"

                    // .NET Restore, Build, and Publish
                    sh '/usr/share/dotnet/dotnet restore src/Web/RealEstate.WebAPI/RealEstate.WebAPI.csproj'
                    sh '/usr/share/dotnet/dotnet build src/Web/RealEstate.WebAPI/RealEstate.WebAPI.csproj -c Release -o /app/build'
                    sh '/usr/share/dotnet/dotnet publish src/Web/RealEstate.WebAPI/RealEstate.WebAPI.csproj -c Release -o /app/publish /p:UseAppHost=false'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    // Docker Build
                    sh "docker build -t $DOCKER_IMAGE_NAME -f Dockerfile ."
                }
            }
        }

        stage('Push image') {
            steps {
                script {
                    // Docker Push with specific tag
                    withDockerRegistry([credentialsId: DOCKER_REGISTRY_CREDENTIALS, url: '']) {
                        docker.withRegistry('https://registry.hub.docker.com', DOCKER_REGISTRY_CREDENTIALS) {
                            dockerImage.push("backend-serkan:latest")
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'CI/CD pipeline completed successfully!'
        }

        failure {
            echo 'CI/CD pipeline failed!'
        }
    }
}
